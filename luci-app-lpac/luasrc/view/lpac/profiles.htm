<%#
 Copyright 2025 Kerem
 Licensed under MIT
-%>

<%+header%>

<style>
.lpac-container {
    max-width: 1200px;
    margin: 0 auto;
}
.lpac-section {
    background: #fff;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 4px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}
.lpac-input {
    width: 100%;
    max-width: 600px;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 3px;
    font-size: 14px;
}
.lpac-button {
    padding: 10px 20px;
    font-size: 14px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
    transition: background 0.3s;
}
.lpac-button-primary {
    background: #0088cc;
    color: white;
}
.lpac-button-primary:hover {
    background: #006ba3;
}
.lpac-button-danger {
    background: #dc3545;
    color: white;
}
.lpac-button-danger:hover {
    background: #c82333;
}
.lpac-button-secondary {
    background: #6c757d;
    color: white;
}
.lpac-button-secondary:hover {
    background: #5a6268;
}
.lpac-status {
    padding: 10px;
    margin-top: 10px;
    border-radius: 3px;
    display: none;
}
.lpac-status.success {
    background: #d4edda;
    border: 1px solid #c3e6cb;
    color: #155724;
    display: block;
}
.lpac-status.error {
    background: #f8d7da;
    border: 1px solid #f5c6cb;
    color: #721c24;
    display: block;
}
.lpac-status.info {
    background: #d1ecf1;
    border: 1px solid #bee5eb;
    color: #0c5460;
    display: block;
}
.lpac-progress {
    width: 100%;
    height: 30px;
    background: #f0f0f0;
    border-radius: 3px;
    overflow: hidden;
    margin-top: 10px;
    display: none;
}
.lpac-progress-bar {
    height: 100%;
    background: #0088cc;
    color: white;
    text-align: center;
    line-height: 30px;
    transition: width 0.3s;
    width: 0%;
}
.lpac-output {
    margin-top: 10px;
    padding: 10px;
    background: #f5f5f5;
    border: 1px solid #ddd;
    border-radius: 3px;
    font-family: monospace;
    font-size: 12px;
    white-space: pre-wrap;
    max-height: 300px;
    overflow-y: auto;
    display: none;
}
.lpac-form-group {
    margin-bottom: 15px;
}
.lpac-form-label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
    color: #333;
}
.lpac-form-hint {
    display: block;
    margin-top: 5px;
    font-size: 12px;
    color: #666;
}
.lpac-select {
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 3px;
    font-size: 14px;
}
</style>

<div class="lpac-container">
    <h2><%:eSIM Profile Management (LPAC)%></h2>
    <p><%:Manage eSIM profiles on Quectel modems using LPA (Local Profile Assistant)%></p>

    <!-- Device Selection Section -->
    <div class="lpac-section">
        <h3><%:Modem Device & Driver Selection%></h3>

        <div class="lpac-form-group">
            <button class="lpac-button lpac-button-secondary" onclick="detectDevices()">
                <%:Scan for Devices%>
            </button>
        </div>

        <div id="device_selection_container" style="margin-top: 15px; display: none;">
            <div class="lpac-form-group">
                <label class="lpac-form-label"><%:APDU Driver%></label>
                <select id="driver_select" class="lpac-select" style="width: 100%; max-width: 400px;" onchange="updateDeviceInputs()">
                    <option value="at">AT (ETSI TS 127 007) - Recommended for EP06-E</option>
                    <option value="at_csim">AT_CSIM (Faster, may not work on all modems)</option>
                    <option value="mbim">MBIM (USB Mobile Broadband Interface)</option>
                    <option value="qmi">QMI (Qualcomm MSM Interface)</option>
                    <option value="qmi_qrtr">QMI QRTR (QMI over QRTR)</option>
                    <option value="uqmi">uQMI (OpenWrt QMI command line tool)</option>
                </select>
                <span class="lpac-form-hint">
                    <%:Select APDU driver based on your modem type%>
                </span>
            </div>

            <div class="lpac-form-group" id="at_device_group">
                <label class="lpac-form-label"><%:AT Serial Device%></label>
                <select id="at_device_select" class="lpac-select" style="width: 100%; max-width: 400px;">
                    <option value=""><%:-- Select AT Device --%></option>
                </select>
                <span class="lpac-form-hint">
                    <%:Select /dev/ttyUSB* or /dev/ttyACM* device for AT driver%>
                </span>
            </div>

            <div class="lpac-form-group" id="mbim_device_group" style="display: none;">
                <label class="lpac-form-label"><%:MBIM Device%></label>
                <select id="mbim_device_select" class="lpac-select" style="width: 100%; max-width: 400px;">
                    <option value=""><%:-- Select MBIM Device --%></option>
                </select>
                <span class="lpac-form-hint">
                    <%:Select /dev/cdc-wdm* device for MBIM driver%>
                </span>
            </div>

            <div class="lpac-form-group">
                <label class="lpac-form-label"><%:HTTP Client%></label>
                <select id="http_client_select" class="lpac-select" style="width: 100%; max-width: 200px;">
                    <option value="curl">curl</option>
                    <option value="wget">wget</option>
                </select>
                <span class="lpac-form-hint">
                    <%:Select HTTP client for SM-DP+ communication%>
                </span>
            </div>

            <div class="lpac-form-group">
                <button class="lpac-button lpac-button-primary" onclick="saveDeviceSettings()">
                    <%:Save Device Settings%>
                </button>
            </div>
        </div>

        <div id="device_status" class="lpac-status"></div>
    </div>

    <!-- Installed Profiles Section -->
    <div class="lpac-section">
        <h3><%:Installed Profiles%></h3>

        <div class="lpac-form-group">
            <button class="lpac-button lpac-button-secondary" onclick="listProfiles()">
                <%:Refresh Profile List%>
            </button>
        </div>

        <div id="profiles_list_container" style="margin-top: 15px; display: none;">
            <table id="profiles_table" style="width: 100%; border-collapse: collapse; border: 1px solid #ddd;">
                <thead>
                    <tr style="background: #f5f5f5;">
                        <th style="padding: 10px; border: 1px solid #ddd; text-align: left;"><%:ICCID%></th>
                        <th style="padding: 10px; border: 1px solid #ddd; text-align: left;"><%:Nickname%></th>
                        <th style="padding: 10px; border: 1px solid #ddd; text-align: left;"><%:Status%></th>
                    </tr>
                </thead>
                <tbody id="profiles_tbody">
                    <!-- Profiles will be inserted here -->
                </tbody>
            </table>
        </div>

        <div id="profiles_status" class="lpac-status"></div>
        <div id="profiles_output" class="lpac-output"></div>
    </div>

    <!-- Add Profile Section -->
    <div class="lpac-section">
        <h3><%:Add New eSIM Profile%></h3>

        <div class="lpac-form-group">
            <label class="lpac-form-label" for="activation_code"><%:Activation Code%></label>
            <input type="text"
                   id="activation_code"
                   class="lpac-input"
                   placeholder="LPA:1$smdp.example.com$ACTIVATION_CODE"
                   autocomplete="off"/>
            <span class="lpac-form-hint">
                <%:Format: LPA:1$SM-DP+_ADDRESS$ACTIVATION_CODE%>
            </span>
        </div>

        <div class="lpac-form-group">
            <label class="lpac-form-label" for="confirmation_code"><%:Confirmation Code%> (<%:optional%>)</label>
            <input type="text"
                   id="confirmation_code"
                   class="lpac-input"
                   style="max-width: 200px;"
                   placeholder="1234"
                   autocomplete="off"/>
            <span class="lpac-form-hint">
                <%:Enter confirmation code if required by your carrier%>
            </span>
        </div>

        <div class="lpac-form-group">
            <button class="lpac-button lpac-button-primary" onclick="addProfile()">
                <%:Install Profile%>
            </button>
        </div>

        <div id="add_progress" class="lpac-progress">
            <div id="add_progress_bar" class="lpac-progress-bar">0%</div>
        </div>

        <div id="add_status" class="lpac-status"></div>
        <div id="add_output" class="lpac-output"></div>
    </div>

    <!-- Delete Profile Section -->
    <div class="lpac-section">
        <h3><%:Delete eSIM Profile%></h3>

        <div class="lpac-form-group">
            <label class="lpac-form-label" for="delete_iccid"><%:Select Profile to Delete%></label>
            <select id="delete_iccid" class="lpac-select" style="width: 100%; max-width: 500px;">
                <option value=""><%:-- No profiles loaded, click Refresh Profile List --%></option>
            </select>
            <span class="lpac-form-hint">
                <%:Select profile by ICCID. Refresh profile list to populate this dropdown.%>
            </span>
        </div>

        <div class="lpac-form-group">
            <button class="lpac-button lpac-button-danger" onclick="deleteProfile()">
                <%:Delete Selected Profile%>
            </button>
        </div>

        <div id="delete_status" class="lpac-status"></div>
        <div id="delete_output" class="lpac-output"></div>
    </div>

    <!-- Modem Status Section -->
    <div class="lpac-section">
        <h3><%:Modem Status%></h3>

        <div class="lpac-form-group">
            <button class="lpac-button lpac-button-secondary" onclick="refreshStatus()">
                <%:Refresh Status%>
            </button>
        </div>

        <div id="status_output" class="lpac-output"></div>
    </div>
</div>

<script>
// Global device settings (loaded from UCI on page load)
var selectedDriver = 'at';
var selectedAtDevice = '/dev/ttyUSB2';
var selectedMbimDevice = '/dev/cdc-wdm0';
var selectedHttpClient = 'curl';
var installedProfiles = []; // Cache for installed profiles

// Load device settings from UCI
function loadDeviceSettings() {
    XHR.get('<%=url("admin/network/lpac/get_settings")%>', null, function(x, data) {
        if (data.success) {
            selectedDriver = data.driver || 'at';
            selectedAtDevice = data.at_device || '/dev/ttyUSB2';
            selectedMbimDevice = data.mbim_device || '/dev/cdc-wdm0';
            selectedHttpClient = data.http_client || 'curl';
        }
    });
}

// Update device input fields based on selected driver
function updateDeviceInputs() {
    var driverSelect = document.getElementById('driver_select');
    var atGroup = document.getElementById('at_device_group');
    var mbimGroup = document.getElementById('mbim_device_group');

    var driver = driverSelect.value;

    if (driver === 'at' || driver === 'at_csim') {
        atGroup.style.display = 'block';
        mbimGroup.style.display = 'none';
    } else if (driver === 'mbim') {
        atGroup.style.display = 'none';
        mbimGroup.style.display = 'block';
    }
}

// Detect available modem devices
function detectDevices() {
    var statusDiv = document.getElementById('device_status');
    var selectionContainer = document.getElementById('device_selection_container');
    var driverSelect = document.getElementById('driver_select');
    var atSelect = document.getElementById('at_device_select');
    var mbimSelect = document.getElementById('mbim_device_select');
    var httpSelect = document.getElementById('http_client_select');

    statusDiv.className = 'lpac-status info';
    statusDiv.innerHTML = '<%:Scanning for modem devices...%>';
    selectionContainer.style.display = 'none';

    XHR.get('<%=url("admin/network/lpac/detect_devices")%>', null, function(x, data) {
        if (data.success) {
            // Clear existing options
            atSelect.innerHTML = '<option value=""><%:-- Select AT Device --%></option>';
            mbimSelect.innerHTML = '<option value=""><%:-- Select MBIM Device --%></option>';

            // Populate AT devices
            if (data.at_devices && data.at_devices.length > 0) {
                data.at_devices.forEach(function(device) {
                    var option = document.createElement('option');
                    option.value = device.path;
                    var accessibleText = device.accessible ? ' ✓' : ' ✗';
                    option.innerHTML = device.path + ' (' + device.name + ')' + accessibleText;
                    option.disabled = !device.accessible;
                    atSelect.appendChild(option);

                    // Auto-select if matches saved preference
                    if (device.path === selectedAtDevice) {
                        option.selected = true;
                    }
                });
            }

            // Populate MBIM devices
            if (data.mbim_devices && data.mbim_devices.length > 0) {
                data.mbim_devices.forEach(function(device) {
                    var option = document.createElement('option');
                    option.value = device.path;
                    var accessibleText = device.accessible ? ' ✓' : ' ✗';
                    option.innerHTML = device.path + ' (' + device.name + ')' + accessibleText;
                    option.disabled = !device.accessible;
                    mbimSelect.appendChild(option);

                    // Auto-select if matches saved preference
                    if (device.path === selectedMbimDevice) {
                        option.selected = true;
                    }
                });
            }

            // Set current driver
            driverSelect.value = selectedDriver;
            httpSelect.value = selectedHttpClient;
            updateDeviceInputs();

            // Show results
            selectionContainer.style.display = 'block';
            statusDiv.className = 'lpac-status success';
            statusDiv.innerHTML = '<strong>✓</strong> <%:Found%> ' + data.total_devices + ' <%:device(s)%><br>' +
                                 '<%:AT:%> ' + (data.at_devices ? data.at_devices.length : 0) + ' | ' +
                                 '<%:MBIM:%> ' + (data.mbim_devices ? data.mbim_devices.length : 0);
        } else {
            statusDiv.className = 'lpac-status error';
            statusDiv.innerHTML = '<strong>✗</strong> <%:Failed to detect devices%>';
        }
    });
}

// Save device settings to UCI
function saveDeviceSettings() {
    var driverSelect = document.getElementById('driver_select');
    var atSelect = document.getElementById('at_device_select');
    var mbimSelect = document.getElementById('mbim_device_select');
    var httpSelect = document.getElementById('http_client_select');
    var statusDiv = document.getElementById('device_status');

    selectedDriver = driverSelect.value || 'at';
    selectedAtDevice = atSelect.value || '/dev/ttyUSB2';
    selectedMbimDevice = mbimSelect.value || '/dev/cdc-wdm0';
    selectedHttpClient = httpSelect.value || 'curl';

    statusDiv.className = 'lpac-status info';
    statusDiv.innerHTML = '<%:Saving device settings to UCI...%>';

    // Save to UCI via backend
    XHR.post('<%=url("admin/network/lpac/save_settings")%>', {
        driver: selectedDriver,
        at_device: selectedAtDevice,
        mbim_device: selectedMbimDevice,
        http_client: selectedHttpClient
    }, function(x, data) {
        if (data.success) {
            statusDiv.className = 'lpac-status success';
            statusDiv.innerHTML = '<strong>✓</strong> ' + data.message + '<br>' +
                                 '<%:Driver:%> ' + data.driver + '<br>' +
                                 '<%:AT Device:%> ' + data.at_device + '<br>' +
                                 '<%:MBIM Device:%> ' + data.mbim_device + '<br>' +
                                 '<%:HTTP Client:%> ' + data.http_client;
        } else {
            statusDiv.className = 'lpac-status error';
            statusDiv.innerHTML = '<strong>✗</strong> <%:Failed to save settings:%> ' + (data.error || '<%:Unknown error%>');
        }
    });
}

// Add eSIM Profile
function addProfile() {
    var activation_code = document.getElementById('activation_code').value.trim();
    var confirmation_code = document.getElementById('confirmation_code').value.trim();

    var statusDiv = document.getElementById('add_status');
    var outputDiv = document.getElementById('add_output');
    var progressDiv = document.getElementById('add_progress');
    var progressBar = document.getElementById('add_progress_bar');

    // Validation
    if (!activation_code || activation_code.length < 10) {
        statusDiv.className = 'lpac-status error';
        statusDiv.innerHTML = '<%:Please enter a valid activation code%>';
        return;
    }

    // Reset UI
    statusDiv.className = 'lpac-status info';
    statusDiv.innerHTML = '<%:Installing profile, please wait (this may take 30-60 seconds)...%>';
    outputDiv.style.display = 'none';
    progressDiv.style.display = 'block';
    progressBar.style.width = '0%';
    progressBar.innerHTML = '0%';

    // Simulate progress (since we don't have real-time updates)
    var progress = 0;
    var progressInterval = setInterval(function() {
        if (progress < 90) {
            progress += 5;
            progressBar.style.width = progress + '%';
            progressBar.innerHTML = progress + '%';
        }
    }, 1000);

    // Make AJAX request with device parameters
    XHR.post('<%=url("admin/network/lpac/add")%>', {
        activation_code: activation_code,
        confirmation_code: confirmation_code,
        driver: selectedDriver,
        at_device: selectedAtDevice,
        mbim_device: selectedMbimDevice,
        http_client: selectedHttpClient
    }, function(x, data) {
        clearInterval(progressInterval);
        progressDiv.style.display = 'none';

        if (data.success) {
            statusDiv.className = 'lpac-status success';
            statusDiv.innerHTML = '<strong>✓</strong> <%:Profile installed successfully!%>';
            document.getElementById('activation_code').value = '';
            document.getElementById('confirmation_code').value = '';
        } else {
            statusDiv.className = 'lpac-status error';
            statusDiv.innerHTML = '<strong>✗</strong> <%:Installation failed:%> ' + (data.error || '<%:Unknown error%>');
        }

        if (data.output || data.raw_output) {
            outputDiv.innerHTML = data.output || data.raw_output;
            outputDiv.style.display = 'block';
        }
    });
}

// Delete eSIM Profile
function deleteProfile() {
    var iccid = document.getElementById('delete_iccid').value;

    var statusDiv = document.getElementById('delete_status');
    var outputDiv = document.getElementById('delete_output');

    if (!iccid || iccid === '') {
        statusDiv.className = 'lpac-status error';
        statusDiv.innerHTML = '<%:Please select a profile to delete%>';
        return;
    }

    if (!confirm('<%:Are you sure you want to delete profile with ICCID:%> ' + iccid + '?')) {
        return;
    }

    statusDiv.className = 'lpac-status info';
    statusDiv.innerHTML = '<%:Deleting profile, please wait...%>';
    outputDiv.style.display = 'none';

    XHR.post('<%=url("admin/network/lpac/delete")%>', {
        iccid: iccid,
        driver: selectedDriver,
        at_device: selectedAtDevice,
        mbim_device: selectedMbimDevice,
        http_client: selectedHttpClient
    }, function(x, data) {
        if (data.success) {
            statusDiv.className = 'lpac-status success';
            statusDiv.innerHTML = '<strong>✓</strong> <%:Profile deleted successfully!%>';
            // Refresh profile list to update delete dropdown
            listProfiles();
        } else {
            statusDiv.className = 'lpac-status error';
            statusDiv.innerHTML = '<strong>✗</strong> <%:Deletion failed:%> ' + (data.error || '<%:Unknown error%>');
        }

        if (data.output || data.raw_output) {
            outputDiv.innerHTML = data.output || data.raw_output;
            outputDiv.style.display = 'block';
        }
    });
}

// Refresh Modem Status
function refreshStatus() {
    var outputDiv = document.getElementById('status_output');

    outputDiv.innerHTML = '<%:Loading modem status...%>';
    outputDiv.style.display = 'block';

    var url = '<%=url("admin/network/lpac/status")%>?' +
              'driver=' + encodeURIComponent(selectedDriver) +
              '&at_device=' + encodeURIComponent(selectedAtDevice) +
              '&mbim_device=' + encodeURIComponent(selectedMbimDevice) +
              '&http_client=' + encodeURIComponent(selectedHttpClient);

    XHR.get(url, null, function(x, data) {
        if (data.success) {
            outputDiv.innerHTML = data.output || data.message || '<%:No status available%>';
        } else {
            outputDiv.innerHTML = '<span style="color: red;"><%:Failed to get modem status:%> ' + (data.error || '<%:Unknown error%>') + '</span>\n\n' +
                                 (data.output || '');
        }
    });
}

// List Installed Profiles
function listProfiles() {
    var statusDiv = document.getElementById('profiles_status');
    var outputDiv = document.getElementById('profiles_output');
    var listContainer = document.getElementById('profiles_list_container');
    var tbody = document.getElementById('profiles_tbody');
    var deleteSelect = document.getElementById('delete_iccid');

    // Reset UI
    statusDiv.className = 'lpac-status info';
    statusDiv.innerHTML = '<%:Loading installed profiles...%>';
    outputDiv.style.display = 'none';
    listContainer.style.display = 'none';

    var url = '<%=url("admin/network/lpac/list")%>?' +
              'driver=' + encodeURIComponent(selectedDriver) +
              '&at_device=' + encodeURIComponent(selectedAtDevice) +
              '&mbim_device=' + encodeURIComponent(selectedMbimDevice) +
              '&http_client=' + encodeURIComponent(selectedHttpClient);

    XHR.get(url, null, function(x, data) {
        if (data.success && data.profiles && data.profiles.length > 0) {
            // Store profiles in global variable
            installedProfiles = data.profiles;

            // Clear table
            tbody.innerHTML = '';

            // Clear delete dropdown and add placeholder
            deleteSelect.innerHTML = '<option value=""><%:-- Select Profile to Delete --%></option>';

            // Populate table and delete dropdown
            data.profiles.forEach(function(profile) {
                var row = tbody.insertRow();

                var cellIccid = row.insertCell(0);
                var cellNickname = row.insertCell(1);
                var cellState = row.insertCell(2);

                cellIccid.style.padding = '10px';
                cellIccid.style.border = '1px solid #ddd';
                cellIccid.style.fontFamily = 'monospace';
                cellIccid.innerHTML = profile.iccid || '<%:Unknown%>';

                cellNickname.style.padding = '10px';
                cellNickname.style.border = '1px solid #ddd';
                cellNickname.innerHTML = profile.nickname || '<%:No name%>';

                cellState.style.padding = '10px';
                cellState.style.border = '1px solid #ddd';
                var stateColor = profile.state === 'enabled' ? 'green' :
                                 profile.state === 'disabled' ? 'orange' : 'gray';
                cellState.innerHTML = '<span style="color: ' + stateColor + '; font-weight: bold;">' +
                                     (profile.state || '<%:Unknown%>').toUpperCase() + '</span>';

                // Add to delete dropdown
                var option = document.createElement('option');
                option.value = profile.iccid;
                var displayText = profile.iccid;
                if (profile.nickname) {
                    displayText = profile.nickname + ' (' + profile.iccid + ')';
                }
                option.text = displayText;
                deleteSelect.add(option);
            });

            // Show table
            listContainer.style.display = 'block';
            statusDiv.className = 'lpac-status success';
            statusDiv.innerHTML = '<strong>✓</strong> <%:Found%> ' + data.profiles.length + ' <%:profile(s)%>';
        } else if (data.success && data.profiles && data.profiles.length === 0) {
            statusDiv.className = 'lpac-status info';
            statusDiv.innerHTML = '<%:No profiles installed on the modem%>';
            // Clear delete dropdown
            deleteSelect.innerHTML = '<option value=""><%:-- No profiles available --%></option>';
            installedProfiles = [];
        } else {
            statusDiv.className = 'lpac-status error';
            statusDiv.innerHTML = '<strong>✗</strong> <%:Failed to list profiles:%> ' + (data.error || '<%:Unknown error%>');
            // Clear delete dropdown
            deleteSelect.innerHTML = '<option value=""><%:-- Error loading profiles --%></option>';
            installedProfiles = [];
        }

        // Show raw output if available
        if (data.raw_output) {
            outputDiv.innerHTML = data.raw_output;
            outputDiv.style.display = 'block';
        }
    });
}

// Auto-refresh status on page load
window.addEventListener('load', function() {
    // Load device settings from UCI first
    loadDeviceSettings();

    // Auto-refresh profile list on page load
    listProfiles();
});
</script>

<%+footer%>
